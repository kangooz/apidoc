{
	"info": {
		"name": "Public API Sandbox Testing",
		"_postman_id": "557f66e3-4c80-88f4-df43-974b87c1b181",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication test.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 200",
							"    pm.response.to.be.ok;",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('message');",
							"    // assert that message field is a string",
							"    pm.expect(pm.response.json().message).to.be.a('string');",
							"});",
							"",
							"pm.test(\"response data must be valid\", function () {",
							"    // assert that message value is valid",
							"    pm.expect(pm.response.json().message).to.be.equal('Success. Your credentials are valid.');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "apiKey",
						"value": "9b56abc9-0d6b-44bc-8e31-9f99f51f3231"
					},
					{
						"key": "apiSecret",
						"value": "5242d190-fa7b-4498-9982-c084e7526b97"
					}
				],
				"body": {},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/auth/test",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"auth",
						"test"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		},
		{
			"name": "Get all deliveries.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 200",
							"    pm.response.to.be.ok;",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('message');",
							"    // assert that message field is a string",
							"    pm.expect(pm.response.json().message).to.be.a('string');",
							"});",
							"",
							"pm.test(\"response data must be valid\", function () {",
							"    // assert that message value is valid",
							"    pm.expect(pm.response.json().message).to.be.equal('Success. Your credentials are valid.');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "apiKey",
						"value": "9b56abc9-0d6b-44bc-8e31-9f99f51f3231"
					},
					{
						"key": "apiSecret",
						"value": "5242d190-fa7b-4498-9982-c084e7526b97"
					}
				],
				"body": {},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/deliveries",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"deliveries"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		},
		{
			"name": "Get a delivery.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 200",
							"    pm.response.to.be.ok;",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('message');",
							"    // assert that message field is a string",
							"    pm.expect(pm.response.json().message).to.be.a('string');",
							"});",
							"",
							"pm.test(\"response data must be valid\", function () {",
							"    // assert that message value is valid",
							"    pm.expect(pm.response.json().message).to.be.equal('Success. Your credentials are valid.');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "apiKey",
						"value": "9b56abc9-0d6b-44bc-8e31-9f99f51f3231"
					},
					{
						"key": "apiSecret",
						"value": "5242d190-fa7b-4498-9982-c084e7526b97"
					}
				],
				"body": {},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/deliveries/21900",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"deliveries",
						"21900"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		},
		{
			"name": "Get a delivery's status.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 200",
							"    pm.response.to.be.ok;",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('message');",
							"    // assert that message field is a string",
							"    pm.expect(pm.response.json().message).to.be.a('string');",
							"});",
							"",
							"pm.test(\"response data must be valid\", function () {",
							"    // assert that message value is valid",
							"    pm.expect(pm.response.json().message).to.be.equal('Success. Your credentials are valid.');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "apiKey",
						"value": "9b56abc9-0d6b-44bc-8e31-9f99f51f3231"
					},
					{
						"key": "apiSecret",
						"value": "5242d190-fa7b-4498-9982-c084e7526b97"
					}
				],
				"body": {},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/deliveries/21900/status",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"deliveries",
						"21900",
						"status"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		},
		{
			"name": "Create a new delivery.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 422",
							"    pm.response.to.have.status(422);",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('error', 'message', 'errorDetails');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "apiKey",
						"value": "9b56abc9-0d6b-44bc-8e31-9f99f51f3231"
					},
					{
						"key": "apiSecret",
						"value": "5242d190-fa7b-4498-9982-c084e7526b97"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"Bouquet de fleurs à livrer à un de mes clients VIP\",\n  \"shipStart\": \"2017-12-30 18:28:00\",\n  \"shipEnd\": \"2017-12-30 20:28:00\",\n  \"dimension\": {\n    \"length\": 10,\n    \"width\": 10,\n    \"height\": 20\n  },\n  \"weight\": 0.42,\n  \"Contact\": {\n    \"firstname\": \"Foo\",\n    \"lastname\": \"Bar\",\n    \"email\": \"foo.bar@company.com\",\n    \"mobile\": \"33642642112\",\n    \"title\": \"Mr\",\n    \"birthday\": 4,\n    \"birthmonth\": 2,\n    \"birthyear\": 1988,\n    \"Address\": {\n      \"name\": \"\",\n      \"city\": \"Paris\",\n      \"country\": \"France\",\n      \"postalcode\": \"94270\",\n      \"street\": \"Rue pasteur\",\n      \"streetnumber\": 24,\n      \"information\": \"\"\n    }\n  },\n  \"Customer\": {\n    \"firstname\": \"Foo\",\n    \"lastname\": \"Bar\",\n    \"email\": \"foo.bar@company.com\",\n    \"mobile\": \"33642642112\",\n    \"title\": \"Mr\",\n    \"birthday\": 4,\n    \"birthmonth\": 2,\n    \"birthyear\": 1988,\n    \"Address\": {\n      \"name\": \"\",\n      \"city\": \"Paris\",\n      \"country\": \"France\",\n      \"postalcode\": \"94270\",\n      \"street\": \"Rue pasteur\",\n      \"streetnumber\": 24,\n      \"information\": \"\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/deliveries",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"deliveries"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		},
		{
			"name": "Test eligibility for a new delivery.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 422",
							"    pm.response.to.have.status(422);",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('error', 'message', 'errorDetails');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "apiKey",
						"value": "9b56abc9-0d6b-44bc-8e31-9f99f51f3231"
					},
					{
						"key": "apiSecret",
						"value": "5242d190-fa7b-4498-9982-c084e7526b97"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"Pickup\": {\n    \"postalcode\": \"75002\",\n    \"lat\": 48.868331,\n    \"long\": 2.334712\n  },\n  \"Destination\": {\n    \"postalcode\": \"75009\",\n    \"lat\": 48.8748577,\n    \"long\": 2.3408563\n  },\n  \"dimension\": {\n    \"length\": 10,\n    \"width\": 10,\n    \"height\": 20\n  },\n  \"weight\": 0.42\n}"
				},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/deliveries/eligibility",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"deliveries",
						"eligibility"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		},
		{
			"name": "Test eligibility for a new delivery with empty body request.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 422",
							"    pm.response.to.have.status(422);",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('error', 'message', 'errorDetails');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "apiKey",
						"value": "9b56abc9-0d6b-44bc-8e31-9f99f51f3231"
					},
					{
						"key": "apiSecret",
						"value": "5242d190-fa7b-4498-9982-c084e7526b97"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/deliveries/eligibility",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"deliveries",
						"eligibility"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		},
		{
			"name": "Cancel a delivery.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 422",
							"    pm.response.to.have.status(422);",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('error', 'message', 'errorDetails');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "apiKey",
						"value": "9b56abc9-0d6b-44bc-8e31-9f99f51f3231"
					},
					{
						"key": "apiSecret",
						"value": "5242d190-fa7b-4498-9982-c084e7526b97"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/deliveries/21900/cancel",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"deliveries",
						"21900",
						"cancel"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		},
		{
			"name": "Cancel a delivery that doesn't exists.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 422",
							"    pm.response.to.have.status(422);",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('error', 'message', 'errorDetails');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "apiKey",
						"value": "9b56abc9-0d6b-44bc-8e31-9f99f51f3231"
					},
					{
						"key": "apiSecret",
						"value": "5242d190-fa7b-4498-9982-c084e7526b97"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/deliveries/99999999/cancel",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"deliveries",
						"99999999",
						"cancel"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		},
		{
			"name": "Get pricing for a new delivery.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 422",
							"    pm.response.to.have.status(422);",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('error', 'message', 'errorDetails');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "apiKey",
						"value": "0086a415-ed10-4146-b794-c36a2f57766e"
					},
					{
						"key": "apiSecret",
						"value": "adab02b7-f103-4560-b41d-dc90c0bc518c"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"Pickup\": {\n    \"postalcode\": \"75002\",\n    \"lat\": 48.868331,\n    \"long\": 2.334712\n  },\n  \"Destination\": {\n    \"postalcode\": \"75009\",\n    \"lat\": 48.8748577,\n    \"long\": 2.3408563\n  },\n  \"dimension\": {\n    \"length\": 10,\n    \"width\": 10,\n    \"height\": 20\n  },\n  \"weight\": 0.42\n}"
				},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/deliveries/pricing",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"deliveries",
						"pricing"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		},
		{
			"name": "Get pricing for a new delivery with empty body request.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 422",
							"    pm.response.to.have.status(422);",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response body must be valid\", function () {",
							"    // assert that response body is an object",
							"    pm.expect(pm.response.json()).to.be.a('object');",
							"    // assert that response object have some fields",
							"    pm.expect(pm.response.json()).to.have.all.keys('error', 'message', 'errorDetails');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "apiKey",
						"value": "0086a415-ed10-4146-b794-c36a2f57766e"
					},
					{
						"key": "apiSecret",
						"value": "adab02b7-f103-4560-b41d-dc90c0bc518c"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.sandbox.you2you.fr/api/deliveries/pricing",
					"protocol": "http",
					"host": [
						"api",
						"sandbox",
						"you2you",
						"fr"
					],
					"path": [
						"api",
						"deliveries",
						"pricing"
					]
				},
				"description": "API keys are set with headers and are valid. The account is active."
			},
			"response": []
		}
	]
}