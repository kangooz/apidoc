{
	"info": {
		"name": "Public API Testing",
		"_postman_id": "e9dc3949-fdd8-4e37-de30-64975c0c6cd0",
		"description": "All scripts to test the public API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication Test with missing headers.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 401",
							"    pm.response.to.have.status(401);",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response must have valid response\", function () {",
							"    // assert that required keys are set",
							"    pm.expect(pm.response.json()).to.have.all.keys('error', 'message');",
							"    // assert that error is valid type",
							"    pm.expect(pm.response.json().error).to.be.a('string');",
							"    // assert that error is valid content",
							"    pm.expect(pm.response.json().error).to.be.equal('Missing credentials.');",
							"    // assert that message is valid type",
							"    pm.expect(pm.response.json().message).to.be.a('string');",
							"    // assert that message is valid content",
							"    pm.expect(pm.response.json().message).to.be.equal('Missing credentials.');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:9050/api/auth/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9050",
					"path": [
						"api",
						"auth",
						"test"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Authentication Test with unvalid API keys.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 401",
							"    pm.response.to.have.status(401);",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response must have valid response\", function () {",
							"    // assert that response is valid type",
							"    pm.expect(pm.response.text()).to.be.a('string');",
							"    // assert that response is valid content",
							"    pm.expect(pm.response.text()).to.be.equal('\"Invalid credentials.\"');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "apiKey",
						"value": "unvalid"
					},
					{
						"key": "apiSecret",
						"value": "unvalid"
					}
				],
				"body": {},
				"url": {
					"raw": "http://localhost:9050/api/auth/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9050",
					"path": [
						"api",
						"auth",
						"test"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Authentication Test with valid and active API keys.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 200",
							"    pm.response.to.be.ok;",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response must have valid response\", function () {",
							"    // assert that required keys are set",
							"    pm.expect(pm.response.json()).to.have.all.keys('message');",
							"    // assert that message is valid type",
							"    pm.expect(pm.response.json().message).to.be.a('string');",
							"    // assert that message is valid content",
							"    pm.expect(pm.response.json().message).to.be.equal('Success. Your credentials are valid.');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "apiKey",
						"value": "0086a415-ed10-4146-b794-c36a2f57766e"
					},
					{
						"key": "apiSecret",
						"value": "adab02b7-f103-4560-b41d-dc90c0bc518c"
					}
				],
				"body": {},
				"url": {
					"raw": "http://localhost:9050/api/auth/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9050",
					"path": [
						"api",
						"auth",
						"test"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Authentication Test with valid but unactive API keys.",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var assert = require('assert');",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"    // assert that the status code is 401",
							"    pm.response.to.have.status(401);",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"response must have valid response\", function () {",
							"    // assert that response is valid type",
							"    pm.expect(pm.response.text()).to.be.a('string');",
							"    // assert that response is valid content",
							"    pm.expect(pm.response.text()).to.be.equal('\"Inactive account.\"');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "apiKey",
						"value": "02a77637-319a-45fc-bb5f-76fa52972685"
					},
					{
						"key": "apiSecret",
						"value": "b5ae626a-aec0-4a5f-887a-6fa2ab0165aa"
					}
				],
				"body": {},
				"url": {
					"raw": "http://localhost:9050/api/auth/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9050",
					"path": [
						"api",
						"auth",
						"test"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}